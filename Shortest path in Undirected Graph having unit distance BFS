https://practice.geeksforgeeks.org/problems/shortest-path-in-undirected-graph-having-unit-distance/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=shortest-path-in-undirected-graph-having-unit-distance

//USING NORMAL BFS
  public:
    vector<int> shortestPath(vector<vector<int>>& edges, int n,int m, int src){
        //CREATE GRAPH
        vector<int>adj[n];
        for(auto it:edges){
            int u=it[0];
            int v=it[1];
            adj[u].push_back(v);
            adj[v].push_back(u);
        }
        
        //dist array
       vector<int>dist(n,1e9);
        dist[src]=0;
        queue<int>q;
        q.push(src);
        while(!q.empty()){
            int node=q.front();
            q.pop();
            //neighbours
            for(auto it:adj[node]){
                if(dist[node]+1<dist[it]){
                    dist[it]=dist[node]+1;
                    q.push(it);
                }
                
            }
        }
        
        for(int i=0;i<n;i++){
            if(dist[i]==1e9)dist[i]=-1;
        }
        return dist;

https://practice.geeksforgeeks.org/problems/topological-sort/1?utm_source=youtube&utm_medium=collab_striver_ytdescription&utm_campaign=topological-sort

//SC: O(N)+O(N) vis and stack used
    //TC: O(V+E) dfs for directed graph
    private:
    void dfs(int node,int vis[],stack<int>&st,vector<int> adj[]){
        vis[node]=1;
        for(auto it:adj[node]){
            if(!vis[it]){
                dfs(it,vis,st,adj);
            }
        }
        st.push(node);
    }
	public:
	vector<int> topoSort(int n, vector<int> adj[]) 
	{
	    //TOPO SORT EXISTS ONLY IN DAG(directed acyclic graph)
	    //topological sort: linear ordering
	    // such that for every u->v , u comes before in that linear ord
	    
	    int vis[n]={0};
	    stack<int>st;
	    for(int i=0;i<n;i++){
	        if(!vis[i]){
	            dfs(i,vis,st,adj);
	        }
	    }
	    vector<int>toposort;
	    while(!st.empty()){
	        toposort.push_back(st.top());
	        st.pop();
	    }
	    return toposort;
	}

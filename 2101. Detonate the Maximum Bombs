https://leetcode.com/problems/detonate-the-maximum-bombs/submissions/962182817/

#define ll long long
// TC : O(N^3)
// SC : O(N^2)
class Solution {
private:
    void dfs(vector<vector<int>>&gr, vector<bool>&vis, int &c, int &i ){
        vis[i]=true;
        c++;
        for(auto it: gr[i]){
            if(!vis[it]){
                dfs(gr,vis,c,it);
            }
        }
    }
public:
    int maximumDetonation(vector<vector<int>>& bombs) {
        int n=bombs.size();
        vector<vector<int>>gr(n);
        //making graph
        for(int i=0;i<n;i++){
            ll x1=bombs[i][0];
            ll y1=bombs[i][1];
            ll r1=bombs[i][2];
            for(int j=0;j<n;j++){
                if(i!=j){
                    //don't connect to itself
                    ll x2=bombs[j][0];
                    ll y2=bombs[j][1];
                    ll x= abs(x1-x2);
                    ll y= abs(y1-y2);
                    if(x*x+y*y<=r1*r1){
                        gr[i].push_back(j);
                    }
                }
            }
        }

        //finding for all nodes which can reach max nodes
        int ans=INT_MIN;
        int c=0;
        for(int i=0;i<n;i++){
            c=0;
            vector<bool>vis(n,false);
            dfs(gr,vis,c,i);
            ans=max(ans,c);
        }
        return ans;
    }
};
